name: Convert Markdown to HTML

on:
  push:
    branches:
      - main

jobs:
  convert:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Determine modified files
        id: get_modified_files
        run: |
          echo "::set-output name=md_files::$(git diff --name-only $(git rev-parse HEAD^) HEAD -- '*.md')"

      - name: Convert modified Markdown to Baseline HTML
        run: |
          for file in ${{ steps.get_modified_files.outputs.md_files }}; do
            echo "Converting $file to HTML"
            docker run --rm \
              -v ${{ github.workspace }}:/workspace \
              -w /workspace \
              pandoc/minimal:3.1.1 \
              pandoc -f markdown -t html -o "${file%.md}.html" "$file"
          done

      - name: Build Docker image for Beautifulsoup
        run: |
          echo "FROM python:3" > Dockerfile.bs
          echo "RUN pip install beautifulsoup4" >> Dockerfile.bs
          docker build -t my-bs -f Dockerfile.bs .

      - name: Determine modified files
        id: get_modified_html
        run: |
          echo "::set-output name=html_files::$(git diff --name-only $(git rev-parse HEAD^) HEAD -- '*.html')"


      - name: Modify HTML using Beautiful Soup
        run: |
          for file in ${{ steps.get_modified_files.outputs.html_files }}; do
            docker run --rm \
              -v ${{ github.workspace }}:/workspace \
              -w /workspace \
              my-bs \
              python python_scripts/edit_html.py "$file"
          done

      - name: Move modified HTML files to docs and Generate index.html
        run: |
          rm -rf docs
          mkdir -p docs
          for file in ${{ steps.get_modified_files.outputs.html_files }}; do
            cp "$file" "docs/$(basename "$file")"
            echo "<li><a href=\"$(basename "$file")\">$(basename "$file")</a></li>"
          done > index.html

          mv index.html docs/

          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"

          git add --all
          git restore --staged Dockerfile*
          git commit -m "Update HTML files"
          git push origin main
